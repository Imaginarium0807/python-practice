Before your interview, take some time to review Python (or Java) syntax. You should be familiar with 
Loops, Lists (ArrayLists), and Dictionaries (HashMaps). The practice problems below are written in 
Python but Java is also an option. The problems will be the same.
Paste this into coderpad to get used to the UI. To test your solution hit the Run button, if the assert fails the 
line number will be indicated on the right panel, if no assert fails you will get no print out and have solved 
the problem.
"""
Example Python Syntax (will also be provided during the 
interview)
Loops
for x in l: "Iterate on x for each value in list"
for i in range(0,5): "Iterate on i from value 0 to 4"
for k, v in d.items(): "Iterate on each key, value pair in dict"
Lists (Array)
l = [] "Define an empty list"
l[i] "Return value at index i in list"
len(l) "Return length of list"
l.append(x) "Add value x to the end of list"
l.sort() "Sort values in list - in place sort, returns None"
sorted(l) "Return sorted copy of list"
x in l: "Evaluate True if x is contained in the list"
Dictionary (HashMap)
d = {} "Define an empty Dictionary"
d[x] "Return value for key x"
d[x] = 1 "Set value for key x to 1"
d.keys() "Return list of keys"
d.values() "Return list of values"
Tuple
tup = ()
tup = (1,2) + tup
Other functions
reversed(n) "reverse a list"
random.random() "random number between 0 and 1"
random.randrange(start, stop) "Return a randomly selected element 
from range(start, stop)"
isinstance(x, list) "returns True if x is instance of list"
split() "returns a list of all the words in the string"
ceil() "returns the smallest integer value greater than or equal 
to x"
"""
"""
Write a function that returns the elements on odd positions (0 
based) in a list
"""
def solution(input):
 #code goes here 
 return outputassert solution([0,1,2,3,4,5]) == [1,3,5]
assert solution([1,-1,2,-2]) == [-1,-2]

a = [1,-1,2,-2]
def solution(input):
    o = []
    for e in input:
        if a.index(e) % 2 !=0:
            o.append(e)
    return o

o = []
def solution(input):
    for i in range(0,len(input)):
        if i % 2 !=0:
            o.append(input[i])
    return o
"""
Write a function that returns the cumulative sum of elements in a 
list
"""
def solution(input):
 # Code goes here 
 return output
assert solution([1,1,1]) == [1,2,3]
assert solution([1,-1,3]) == [1,0,3]
"""
Write a function that takes a number and returns a list of its 
digits
"""
def solution(input):
 # Code goes here
 return output
assert solution(123) == [1,2,3]
assert solution(400) == [4,0,0]
"""
From: http://codingbat.com/prob/p126968
Return the "centered" average of an array of ints, which we'll 
say is 
the mean average of the values, except ignoring the largest and 
smallest values in the array. If there are multiple copies of the 
smallest value, ignore just one copy, and likewise for the 
largest 
value. Use int division to produce the final average. You may 
assume 
that the array is length 3 or more.
"""
def solution(input):
 # Code goes here
 return output 
assert solution([1, 2, 3, 4, 100]) == 3
assert solution([1, 1, 5, 5, 10, 8, 7]) == 5
assert solution([-10, -4, -2, -4, -2, 0]) == -
